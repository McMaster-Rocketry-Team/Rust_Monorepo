syntax = "proto3";

enum NyoomDataType {
  GCM_ONLY = 0;                       // only contains data received by the GCM, with RSSI and SNR information (low data rate)
  AVIONICS_ONLY = 1;                  // only contains data recorded by the avionics, without RSSI and SNR information (high data rate)
  GCM_AND_AVIONICS = 2;               // contains both GCM and avionics data (high data rate)
}

message Handshake {
  uint32 version = 1;
  string launch_title = 3;
  string launch_description = 4;
  bytes rocket_model = 5;             // gltf model (.glb file), can be empty
  repeated bytes devices_icons = 24;  // images of the devices (width = 256px, height < 256px, png)
  string rocket_name = 6;
  string avionics_name = 7;
  string avionics_name_short = 25;    // can be empty
  string avionics_sn = 8;
  string avionics_software_version = 9;

  // danger_min <= warning_min <= warning_max <= danger_max
  message DangerRange {
    double danger_min = 1;
    double danger_max = 2;
    double warning_min = 3;
    double warning_max = 4;
  }

  DangerRange vertical_angle_range = 10;
  DangerRange battery_percentage_range = 11;
  DangerRange battery_est_time_range = 12;
  DangerRange battery_voltage_range = 13;
  DangerRange battery_current_range = 14;
  DangerRange air_temperature_range = 15;
  DangerRange core_temperature_range = 16;
  DangerRange mach_range = 17;
  DangerRange altitude_range = 18;
  DangerRange y_rotation_speed_range = 19;
  DangerRange xz_rotation_speed_range = 20;
  DangerRange y_acceleration_range = 21;
  DangerRange xz_acceleration_range = 22;

  NyoomDataType data_type = 23;
}

enum EventType {
  CUSTOM = 0;
  IGNITION = 1;
  LAUNCHPAD_DEFINE = 2;              // Set the latitude & longitude in the following frame as the location of the launchpad
  GCM_PACKAGE_RECEIVED = 3;
}

enum Color {
  RED = 0;
  GREEN = 1;
  BLUE = 2;
  ORANGE = 3;
  PURPLE = 4;
  NORMAL = 5;                        // white when the background color is black, black otherwise
  INACTIVE = 6;                      // grey
}

message Data {
  oneof data {
    EventData event = 1;
    FrameData frame = 2;
  }
}

message EventData {
  double timestamp = 1;              // unix timestamp, unit: ms

  string full_name = 2;              // when full_name is not empty, it will be displayed in the event list
  string short_name = 3;             // when short_name is not empty, it will be displayed in the progress bar
  EventType type = 4;
}

message FrameData {
  double timestamp = 1;              // unix timestamp, unit: ms

  // right handed coordinate system
  message Vector3 {
    double x = 1;                    // x+: east
    double y = 2;                    // y+: up
    double z = 3;                    // z+: south
  }
  message Quaternion {
    double x = 1;
    double y = 2;
    double z = 3;
    double w = 4;
  }
  message GPS {
    uint32 satellites_in_use = 1;
    double latitude = 2;
    double longitude = 3;
  }
  message Pyro {
    string name = 1;
    bool continuity = 2;
    bool firing = 3;
    bool fault = 4;
  }
  message Battery {
    double voltage = 1;              // unit: V
    double current = 2;              // unit: A
    double percentage = 3;           // 0-100
    double est_time_left = 4;        // unit: ms
  }
  message Device {
    enum DeviceRole {
      AVIONICS = 0;
      GCM = 1;
      RELAY = 2;
    }

    string name = 1;
    string name_short = 2;           // can be empty
    string sn = 3;
    string software_version = 4;
    DeviceRole role = 5;
    int32 icon_index = 6;            // index of the icon in the Handshake message, -1 if no icon
  }
  message RadioLink {
    double rssi = 1;
    double snr = 2;
    string device_1_sn = 3;
    string device_2_sn = 4;
    bool active = 5;
  }
  message CustomData {
    string name = 1;

    message BoolLED {
      bool value = 1;
      string light_text = 2;         // color on the led
      Color light_color = 3;         // color of the led when value is true
    }

    oneof data {
      string str = 2;
      BoolLED bool_led = 3;
      Vector3 vector3 = 4;
    }
  }

  string avionics_state = 2;
  Color avionics_state_color = 3;
  Vector3 acceleration = 4;            // unit: m/s^2, uses a cartesian coordinate system which uses the rocket as the origin
  Vector3 rotation_speed = 5;          // angular rotation speed, unit deg/s, uses a cartesian coordinate system which uses the rocket as the origin
  Quaternion orientation = 6;          // where the rocket is pointing, relative to the launch pad's coordinate system
  Vector3 speed = 7;                   // unit: m/s, uses a cartesian coordinate system which uses the launch pad as the origin
  Vector3 position = 8;                // unit: m, uses a cartesian coordinate system which uses the launch pad as the origin
  double pressure = 9;                 // unit: Pa
  double air_temperature = 10;         // unit: C
  double core_temperature = 11;        // unit: C
  GPS gps = 12;
  bool armed = 13;
  bool soft_armed = 14;
  repeated Pyro pyro = 15;
  Battery battery = 16;
  bool buzzer = 17;
  repeated CustomData custom_data = 18;
  repeated Device devices = 19;
  repeated RadioLink radio_links = 20;
}
