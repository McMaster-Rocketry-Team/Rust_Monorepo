[package]
name = "vlfs"
version = "0.9.0"
edition = "2024"
authors = ["pegasis"]

[features]
default = ["ecc", "defmt"]
log = ["dep:log"]
defmt = ["embedded-io-async/defmt-03"]
std = ["dep:random-access-disk", "dep:random-access-storage"]
ecc = []
internal_tests_use_debug_flash = []
internal_test_coverage = []


[dependencies]
embassy-sync = { version = "0.5.0", default-features = false }
defmt = "0.3"
heapless = { version = "0.8.0", default-features = false }
bitvec = { version = "1.0.1", default-features = false }
futures = { version = "0.3.17", default-features = false, features = [
    "async-await",
] }
rand = { version = "0.8.5", features = ["small_rng"], default-features = false }
paste = "1.0.12"
log = { version = "0.4", optional = true }
embedded-hal-async = "1.0.0"
random-access-disk = { version = "3.0.0", default-features = false, features = [
    "tokio",
    "libc",
], optional = true }
random-access-storage = { version = "5.0.0", optional = true }
embedded-io-async = { version = "0.6.1" }

[dev-dependencies]
vlfs = { version = "*", path = ".", default-features = false, features = [
    "ecc",
    "std",
    "log",
] }
futures = "0.3.28"
futures-executor = { version = "0.3.17", features = ["thread-pool"] }
futures-test = "0.3.17"
futures-timer = "3.0.2"
futures-util = { version = "0.3.17", features = ["channel"] }

# Enable critical-section implementation for std, for tests
critical-section = { version = "1.1", features = ["std"] }
static_cell = "2.0.0"
tokio = { version = "1.28.2", features = ["full", "time"] }
project-root = "0.2.2"
replace_with = "0.1.7"
function_name = "0.3.0"
env_logger = "0.11.3"
tokio-tungstenite = "0.21.0"
serde = { version = "1.0.203", features = ["derive"] }
serde_json = "1.0.117"
